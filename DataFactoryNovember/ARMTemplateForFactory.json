{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DataFactoryNovember"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"RestService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://health.data.ny.gov/api/views/jxy9-yhdk/rows.json?accessType=DOWNLOAD"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AggESG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Coarse",
							"runConcurrently": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Census_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Presence by Country MSH Henner.csv",
						"container": "uploads"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "Partner",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "month_presence",
						"type": "String"
					},
					{
						"name": "country_name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ESGextracted')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "extracted"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ESGfactset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ESG_scores.csv",
						"container": "uploads"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Company Name",
						"type": "String"
					},
					{
						"name": "Equity",
						"type": "String"
					},
					{
						"name": "Ticker Symbol",
						"type": "String"
					},
					{
						"name": "E",
						"type": "String"
					},
					{
						"name": "S",
						"type": "String"
					},
					{
						"name": "G",
						"type": "String"
					},
					{
						"name": "ESG",
						"type": "String"
					},
					{
						"name": "EPS",
						"type": "String"
					},
					{
						"name": "Profit Margin ",
						"type": "String"
					},
					{
						"name": "Tobin's Q",
						"type": "String"
					},
					{
						"name": "Return on Asset",
						"type": "String"
					},
					{
						"name": "Return on Equity",
						"type": "String"
					},
					{
						"name": "Debt To Market Cap Ratio",
						"type": "String"
					},
					{
						"name": "Total Asset Turnover",
						"type": "String"
					},
					{
						"name": "Price to Sales Ratio",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ESGtransformed')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "extracted"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Company Name",
						"type": "String"
					},
					{
						"name": "Equity",
						"type": "String"
					},
					{
						"name": "Ticker Symbol",
						"type": "String"
					},
					{
						"name": "E",
						"type": "String"
					},
					{
						"name": "S",
						"type": "String"
					},
					{
						"name": "G",
						"type": "String"
					},
					{
						"name": "ESG",
						"type": "String"
					},
					{
						"name": "EPS",
						"type": "String"
					},
					{
						"name": "Profit Margin ",
						"type": "String"
					},
					{
						"name": "Tobin's Q",
						"type": "String"
					},
					{
						"name": "Return on Asset",
						"type": "String"
					},
					{
						"name": "Return on Equity",
						"type": "String"
					},
					{
						"name": "Debt To Market Cap Ratio",
						"type": "String"
					},
					{
						"name": "Total Asset Turnover",
						"type": "String"
					},
					{
						"name": "Price to Sales Ratio",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestBabyNames')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/census_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "census_parquet",
						"container": "extracted"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "country",
						"type": "UTF8"
					},
					{
						"name": "Partner",
						"type": "UTF8"
					},
					{
						"name": "Year",
						"type": "INT_16"
					},
					{
						"name": "month",
						"type": "INT_16"
					},
					{
						"name": "month_presence",
						"type": "DOUBLE"
					},
					{
						"name": "country_name",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/targetPop')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "population.parquet",
						"container": "extracted"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/usPop')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "population.json",
						"container": "uploads"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"type": {
							"type": "string"
						},
						"features": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"type": {
										"type": "string"
									},
									"id": {
										"type": "string"
									},
									"properties": {
										"type": "object",
										"properties": {
											"name": {
												"type": "string"
											}
										}
									},
									"geometry": {
										"type": "object",
										"properties": {
											"type": {
												"type": "string"
											},
											"coordinates": {
												"type": "array",
												"items": {
													"type": "array",
													"items": {
														"type": "array",
														"items": {
															"type": "number"
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ESGfactset",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ESGtransformed",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "ESGextracted",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "AggregateByEquity"
						},
						{
							"name": "filterNulls"
						}
					],
					"script": "source(output(\n\t\t{Company Name} as string,\n\t\tEquity as string,\n\t\t{Ticker Symbol} as string,\n\t\tE as double,\n\t\tS as double,\n\t\tG as double,\n\t\tESG as double,\n\t\tEPS as double,\n\t\t{Profit Margin } as double,\n\t\t{Tobin's Q} as double,\n\t\t{Return on Asset} as double,\n\t\t{Return on Equity} as double,\n\t\t{Debt To Market Cap Ratio} as double,\n\t\t{Total Asset Turnover} as double,\n\t\t{Price to Sales Ratio} as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 3,\n\t\tEquity\n\t)) ~> source1\nfilterNulls aggregate(groupBy(EquityAgged = Equity),\n\tESG_avg = avg(ESG),\n\t\tnb_Tickers = countDistinct({Ticker Symbol})) ~> AggregateByEquity\nsource1 filter(not(isNull({Ticker Symbol}))) ~> filterNulls\nAggregateByEquity sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\t{Company Name} as string,\n\t\tEquity as string,\n\t\t{Ticker Symbol} as string,\n\t\tE as string,\n\t\tS as string,\n\t\tG as string,\n\t\tESG as string,\n\t\tEPS as string,\n\t\t{Profit Margin } as string,\n\t\t{Tobin's Q} as string,\n\t\t{Return on Asset} as string,\n\t\t{Return on Equity} as string,\n\t\t{Debt To Market Cap Ratio} as string,\n\t\t{Total Asset Turnover} as string,\n\t\t{Price to Sales Ratio} as string\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\tpartitionBy('hash', 3,\n\t\tEquityAgged\n\t)) ~> sink1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1) ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ESGfactset')]",
				"[concat(variables('factoryId'), '/datasets/ESGtransformed')]",
				"[concat(variables('factoryId'), '/datasets/ESGextracted')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/powerquery1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "census_parquet",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> census_parquet",
							"dataset": {
								"referenceName": "census_parquet",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared census_parquet = let\r\n  AdfDoc = AzureStorage.BlobContents(\"https://afglearnnov2021.blob.core.windows.net/extracted/census_parquet\"),\r\n  Parquet = Parquet.Document(AdfDoc)\r\nin\r\n  Parquet;\r\nshared UserQuery = let\r\n  Source = census_parquet,\r\n  #\"Renamed columns\" = Table.RenameColumns(Source, {{\"country\", \"country_id\"}}),\r\n  #\"Grouped rows\" = Table.Group(#\"Renamed columns\", {\"country_id\", \"country_name\", \"Year\"}, {{\"avg_presence\", each List.Average([month_presence]), type nullable number}})\r\nin\r\n  #\"Grouped rows\";\r\n",
					"documentLocale": "en-us"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/census_parquet')]"
			]
		}
	]
}